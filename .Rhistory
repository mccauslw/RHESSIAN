devtools::use_rcpp()
usethis::use_rcpp()
Rcpp::sourceCpp('src/alias.cpp')
library(RHESSIAN)
dr <- alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
RHESSIAN::alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
library(RHESSIAN)
RHESSIAN::alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
library(RHESSIAN)
RHESSIAN::alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
Rcpp::sourceCpp('src/alias_pp.cpp')
library(RHESSIAN)
devtools::load_all(".")
library(RHESSIAN)
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
library(RHESSIAN)
devtools::load_all(".")
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
library(RHESSIAN)
devtools::load_all(".")
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
library(RHESSIAN)
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
devtools::load_all(".")
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
h = alias_cpp(c(1,2,3,4,5,4,3,2,1), 10000)
hist(h)
hist(h[h<10])
sum(h<10)
h[1:1000]
library(RHESSIAN)
devtools::load_all(".")
alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
h = alias_cpp(c(1,2,3,4,5,4,3,2,1), 10000)
hist(h)
h = alias_cpp(c(5,4,3,2,1,2,3,4,5), 10000)
hist(h)
h = alias_cpp(c(5,4,3,2,1,2,3,4,5), 10000)
hist(h)
h = alias_cpp(c(5,4,3,2,1,2,3,4,5), 20000)
hist(h)
Rcpp::sourceCpp('src/spline_pp.cpp')
version()
R.version
devtools::load_all(".")
devtools::load_all(".")
Rcpp::sourceCpp('src/alias_pp.cpp')
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 1000)
hist(u_draw)
library(RHESSIAN)
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 1000)
hist(u_draw)
devtools::load_all(".")
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 1000)
hist(u_draw)
u_draw
# Test spline evaluation
u = seq(0, 1, by=0.01)
f_u = spline_eval_cpp(c(1, 2, 1), c(1, 0, -1), u)
plot(u, f_u, type='l')
# Test discrete draw
d = alias_cpp(c(1,2,3,4,5,4,3,2,1), 100)
hist(d, breaks = seq(-0.5, 8.5, by=1))
library(RHESSIAN)
devtools::load_all(".")
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 1000)
hist(u_draw)
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
devtools::use_vignettes("flexeven")
devtools::use_vignette("flexeven")
t = seq(0,1,by=0.001)
plot(t, t^2*(1-t)^2)
plot(t, t^2*(1-t)^2, type='l')
library(RHESSIAN)
library(RHESSIAN)
devtools::load_all(".")
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
library(RHESSIAN)
devtools::load_all(".")
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 50000)
hist(u_draw)
library(RHESSIAN)
devtools::load_all(".")
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
u_draw = spline_draw_cpp(c(1, 2, 1), c(1, 0, -1), 10000)
hist(u_draw)
K = 6
k = 0:K
u = k/K; u[K] = (K-0.5)/K
v = 1-(1-u)^2
x = qnorm(0.5 + 0.5*v)
x
v
u
source('~/Git_repos/RHESSIAN/R/table_create.R')
x
paste(x)
paste(x, sep=', ')
paste(x, collapse=', ')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/R/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
A = matrix(c(1,2,3,4), nrow=2, ncol=2)
A
A[1,1]
A[1,2]
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
source('~/Git_repos/RHESSIAN/src/table_create.R')
library(RHESSIAN)
devtools::load_all(".")
source('~/Git_repos/RHESSIAN/test.R')
devtools::load_all(".")
source('~/Git_repos/RHESSIAN/test.R')
help(skew_eval_c)
help(skew_eval_c)
help(skew_eval_c)
library(RHESSIAN)
help(skew_eval_c)
help(skew_eval_cpp)
lnf <- skew_eval_cpp(0, c(-1, 1, -1, 1), -1, 10, seq(-5, 5, by=1))
lnf
system.time(runif(10000))
system.time(runif(100000))
system.time(runif(1000000))
system.time(sqrt(sqrt(runif(1000000))))
system.time(rnorm(1000000))
hist(sqrt(sqrt(runif(10000))))
system.time(exp((1/3)*log(runif(1000000)) + 0.25*log(runif(1000000))))
hist(exp((1/3)*log(runif(10000)) + 0.25*log(runif(10000))))
p = seq(0,1,by=0.01)
plot(dbeta(p,3,2))
lines(dbeta(p,2,1))
sys.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 10000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 10000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
library(RHESSIAN)
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
library(RHESSIAN)
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
system.time(spline_draw_cpp(c(1,2,1), c(1,0,-1), 1000000))
library(RHESSIAN)
lnf <- skew_eval_cpp(5, c(0, 0.4, 0.01, 0, 0), 4, 1.0, seq(0, 10, by=0.1))
lnf
library(RHESSIAN)
help(skew_eval_cpp)
source('~/Git_repos/RHESSIAN/test.R')
case
case$h
names(case)
plot(case$phi)
plot(case$x, case$phi)
source('~/Git_repos/RHESSIAN/test.R')
lnf <- skew_eval_cpp(0, case$h, 0, omega, case$x)
plot(case$x, lnf)
length(lnf)
plot(lnf[-100, 100])
plot(lnf[-100:100])
plot(lnf[900:1100])
plot(lnf[901:1101])
plot(lnf[951:1051])
source('~/Git_repos/RHESSIAN/test.R')
plot(case$x, lnf)
plot(case$x[951:1051], lnf[951:1051])
library(RHESSIAN)
case <- Po_GaPo(n, y_bar, r, theta, omega, mode=0, x_max, n_pos=1000)
plot(case$x, case$phi - 0.5*omega*case$x^2, type='l')
lines(case$x, case$phi, col='red')
n <- 10
y_bar <- 5
theta <- 5
omega <- 9
x_max <- 1
r <- Inf; mu <- n*(theta-y_bar)/omega
#r <- 10; mu <- n*r*(theta-y_bar)/(omega*(r+theta))
case <- Po_GaPo(n, y_bar, r, theta, omega, mode=0, x_max, n_pos=1000)
plot(case$x, case$phi - 0.5*omega*case$x^2, type='l')
lines(case$x, case$phi, col='red')
n <- 10
y_bar <- 5
theta <- 5
omega <- 16
x_max <- 1
r <- Inf; mu <- n*(theta-y_bar)/omega
#r <- 10; mu <- n*r*(theta-y_bar)/(omega*(r+theta))
case <- Po_GaPo(n, y_bar, r, theta, omega, mode=0, x_max, n_pos=1000)
plot(case$x, case$phi - 0.5*omega*case$x^2, type='l')
lines(case$x, case$phi, col='red')
mu
lnf <- skew_eval_cpp(0, case$h, mu, omega, case$x)
lines(case$x, lnf, col='blue')
case$h
50 * (0.25 - exp(0.25)+1)
50 * (-0.25 - exp(-0.25)+1)
source('~/Git_repos/RHESSIAN/R/Po_GaPo.R')
n <- 10
y_bar <- 5
theta <- 5
omega <- 16
x_max <- 1
r <- Inf; mu <- n*(theta-y_bar)/omega
#r <- 10; mu <- n*r*(theta-y_bar)/(omega*(r+theta))
case <- Po_GaPo(n, y_bar, r, theta, omega, mode=0, x_max, n_pos=1000)
plot(case$z, case$phi - 0.5*omega*case$z^2, type='l')
lines(case$z, case$phi, col='red')
source('~/Git_repos/RHESSIAN/test.R')
case$h
mu
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
source('~/Git_repos/RHESSIAN/test.R')
source('~/Git_repos/RHESSIAN/test.R')
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
plot(case$z, lnf - case$phi + 0.5*case$x^2, type='l')
plot(case$z, lnf - case$phi + 0.5*case$x^2, type='l')
abline(v=z_knots)
abline(v=-zknots)
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
source('~/Git_repos/RHESSIAN/test.R')
library(RHESSIAN)
source('~/Git_repos/RHESSIAN/test.R')
